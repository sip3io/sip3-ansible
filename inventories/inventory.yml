# Before run the playbook, please check inventory file
# You should setup properties for correct installation
#
# To run playbook, please use:
# ansible-playbook -i inventories/inventory.yml playbooks/sip3.yml
# To run playbook locally use:
# ansible-playbook -i inventories/inventory.yml playbooks/sip3.yml --connection=local
#
# Also you can set tags which will be use: sip3, storage, frontend, backend
# E.g.
# ansible-playbook -i inventories/inventory.yml playbooks/sip3.yml -t storage
#
# tag sip3: will manipulate with sip3 components, such as SIP3 Captain, Salto, Twig, Hoof
# tag storage: will manipulate only with components MongoDB and InfluxDB
# tag frontend: will manipulate only with components SIP3 Hoof and Grafana
# tag backend: will manipulate with components, such as SIP3 Salto, Twig
#
# Also you set exclusion host.
# For example, you need run playbook without captain
# ansible-playbook -i inventories/inventory.yml playbooks/sip3.yml --limit 'all:!captain'

all:
  ###
  # Section which define hosts where will be install SIP3 applications
  children:
    mongodb:
      hosts:
        # Add MongoDB hosts here
        #mongodb1:
    influxdb:
      hosts:
        # Add influxdb hosts here
        #influxdb1:
    salto:
      hosts:
        # Add sip3-salto hosts here
        #salto1:
    twig:
      hosts:
        # Add sip3-twig hosts here
        #twig1:
    grafana:
      hosts:
        # Add grafana hosts here
        #grafana1:
    hoof:
      hosts:
        # Add sip3-salto hosts here
        #hoof1:
    captain:
      hosts:
        # Add sip3-captain hosts here
        # You can add real hosts or interfaces symlinks
        #captain1@enp1s0:
          # Ansible ssh connection facts
          # SSH host. You can use dns name or IP address
          #ansible_ssh_host: captain1
          # SSH username
          #ansible_user: root
          # SSH password
          #ansible_password: root
          # You can set specific captain part variables for host. Or any another variables. That variables will overwrite global variables
          #captain:
          #  pcap:
          # Ethernet interface where Captain will be sniff.
          #    dev: enp1s0
          # Libpcap filter string. For more information about semantic you can find in pcap-filter(7)
          #    bpf_filter: tcp or udp
          #  rtcp:
          #    enabled: false
          #second captain interface on captain1
        #captain1@lo:
          # Ansible ssh connection facts
          # SSH host. You can use dns name or IP address
          #ansible_ssh_host: captain1
          # SSH username
          #ansible_user: root
          # SSH password
          #ansible_password: root
          # You can skip sip3 package install for fake "interface" hosts
          #config_only: true
          #captain:
          #  pcap:
          # Ethernet interface where Captain will be sniff.
          #    dev: lo
          # Libpcap filter string. For more information about semantic you can find in pcap-filter(7)
          #    bpf_filter: tcp or udp
          #  rtcp:
          #    enabled: false

  ###
  # Commons variables of SIP3 applications
  vars:
    # Username for ssh access. Auth should be done via ssh identity_file (private and public keys) or set option -K for ansible-playbook
    #ansible_user: root
    # Management ip address for SSH access
    #ansible_host: 127.0.0.1
    # May be usefull for Non-SSH connection in case of localhost (127.0.0.1). Uncomment for use.
    # ansible_connection: local
    # SSH port for management access to hosts
    #ansible_port: 22
    # Properties ansible_user, ansible_host and ansible_port can be individual for each hosts,
    # in this case you should copy these properties to each hosts variable section below.
    # ansible_user should have privileged access for create directory, install packages. We recommend use root.
    # ip address of MongoDB for internal communication with Salto and Twig
    #
    # Use property ansible_become for privilege escalation. If you don't use root in ansible_user property,
    # you should use ansible_become
    #ansible_become: true

    # Common ip address for all hosts. If you want separate for each one, you can define it in group or host variable
    address: 127.0.0.1
    # Needs use proxy, you can set property 'proxy'
    # E.g.
    # proxy: http://127.0.0.1:3128

    # Community or Enterprise version edition
    edition: ce
    # Files for EE downloading. crt and key files should be located in the roles/repo/files/etc/ssl/repo.sip3.io/ directory.
    license:
      cert: client.crt
      key: client.key
    # Put file in roles/salto/files/etc/sip3-salto/
      file: client.jks
    # SIP3 features
    features:
      - call
      - register
      - rtcp
      - rtp
      - rec
      - udf
    # Settings for Java
    java:
      xms: 512M
      xmx: 1024M
      gc: G1
      other: -XX:+PrintGCDetails
    # Vert.X metrics
    vertx:
      enabled: true
      retention_duration: 5d

    # Persistence storage properties
    mongodb:
      # If you want to use for MongoDB exclusive ip address, you can set here. Otherwise will be use variable 'address'
      address: 127.0.0.1
      port: 27017
      path: /var/lib/mongodb
      db: sip3

    # Properties for metrics storage
    influxdb:
      # If you want to use for InfluxDB exclusive ip address, you can set here. Otherwise will be use variable 'address'
      address: 127.0.0.1
      port: 8086
      path: /var/lib/influxdb
      db: sip3

    # Properties of Grafana for represent metric graphs
    grafana:
      datasources:
        database: sip3

    # Properties for SIP3 Salto application
    salto:
      # You can set properties of SIP3 Salto application as it defined in configuration
      # metrics:
      #  influxdb:
      #    uri: http://127.0.0.1:8086
      # Salto ip address on which the Captain stream is listen. Otherwise will be use variable 'address'
      address: 127.0.0.1
      port: 15060
      mongodb:
        bulk_size: 1
        update_period: 300000        
        collections:
          sip_index_index:
            max_collections: 30
          sip_index_raw:
            max_collections: 30
          unknown_raw:
            max_collections: 30
          sip_register_index:
            max_collections: 10
          sip_register_raw:
            max_collections: 10
          attributes:
            max_collections: 30
      attributes:
        record_ip_addresses: true
      udf:
        - name: "sip_udf_function.groovy"
          body: |
            package udf
            vertx.eventBus().localConsumer("sip_message_udf", { event ->
                event.reply(true)
            })
    # Properties for SIP3 Twig application
    twig:
      server:
        port: 8080
      # You can set existing grafana server as Authorization Provider by providing url to it
      # security:
      #   grafana:
      #     url: https://grafana.example.com/api/user

    # Properties for SIP3 Captain application
    captain:
      pcap:
        # Ethernet interface where Captain will be sniff.
        dev: eth0
        # Libpcap filter string. For more information about semantic you can find in pcap-filter(7)
        bpf_filter: tcp or udp
      rtcp:
        enabled: false

    # Configuration properties for running SIP3 Hoof
    hoof:
      # Hostname of UI for access via browser
      server_name: _
      # Reconfigure /etc/nginx/nginx.conf for use :80 for SIP3 Hoof
      listen_port: 80
      # Will recommend set to 'yes' if you use scratch install of NGINX
      reconfigure: yes
      # config for Hoof UI
      config:
        name: hoof
        type: hoof
        time_zones:
          - label: UTC
            name: "(UTC) Greenwich Mean Time"
            value: "+00:00"
        winbox:
          auto_close: false
        sidebar:
          dashboards:
            - order: 0
              name: Dashboards
              type: external
              url: "/grafana"
          searches:
            - order: 0
              name: Simple Search
              type: internal
              url: "/search/simple"
              icon: "/assets/page-icons/SimpleSearch.svg"
            - order: 1
              name: Advanced Search
              type: internal
              url: "/search/advanced"
              icon: "/assets/page-icons/AdvancedSearch.svg"
          links:
            - order: 0
              name: Documentation
              type: external
              url: https://sip3.io/docs
              icon: "/assets/page-icons/Documentation.svg"
        root_path: ''
        oauth2:
          enabled: false
          provider: sip3

    # Structure of hosts map for correlation legs in flow diagram
    hostmap:
      # Host name as it will show in the call flow
      - name: "node-1"
        addr:
          - 127.0.0.1/32
          - 127.0.0.2/32
        mapping:
          - source: 127.0.0.1/32
            target: 127.0.0.2/32
      - name: "node-2"
        addr:
          - 127.0.1.1/32
          - 127.0.2.2/32
        mapping:
          - source: 127.0.1.1/32
            target: 127.0.2.2/32
